What happens when you initialize a repository? Why do you need to do it?
	It adds all the necessary objects into the directory & keeps existing files as untracked. 
	It is needed to make a repository to be used in GIT.
	
How is the staging area different from the working directory and the repository?
What value do you think it offers?
	Staging area is where all files/changes which are going to be put into repository presents.
	It helps to add all changes/files into one group to make a single commit.

How can you use the staging area to make sure you have one commit per logical
change?
	We can keep adding all files which are changed into Staging area. Upon ready to move 
	the entire set of logical change we can commit that into repository.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	when we experiment a new feature & do not want that to be official release until it is successful, 
	we can use branch. This way we can keep master & new feature branch organized & clean.

How do the diagrams help you visualize the branch structure?
	It will be easier to see as a graph to understand which branch goes where & how to trace back to initial commit.
	
What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	Merging results in adding the feature / experiment into master branch after completion of work.
	To identify & trace the history we add those as merged in grangh.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
	In Automatic commit we would not be given the option to choose valid/invalid code blocks. Only thing is it saves time.
	In Manual commit we are given with option to choose code blocks to make sure valid codes are included however it takes lot of time.
